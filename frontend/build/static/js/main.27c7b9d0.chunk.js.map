{"version":3,"sources":["components/MenuLeft/logo.svg","redux/class/class.type.js","redux/class/class.reducer.js","redux/dataSocket/dataSocket.type.js","redux/dataSocket/dataSocket.utils.js","redux/dataSocket/dataSocket.conf.js","redux/dataSocket/dataSocket.reducer.js","redux/user/user.type.js","redux/user/user.reducer.js","redux/root-reducer.js","redux/user/user.selector.js","redux/dataSocket/dataSocket.action.js","redux/dataSocket/dataSocket.sagas.js","redux/root-saga.js","redux/store.js","components/MenuLeft/MenuLeft.component.jsx","redux/class/class.action.js","components/CursorFollow/CursorFollow.component.jsx","components/DropDownChart/DropDownChart.component.jsx","redux/dataSocket/dataSocket.selector.js","components/ContainerChart/ContainerChart.component.jsx","page/ChartPage/ChartPage.component.jsx","page/TradePage/TradePage.component.jsx","redux/class/class.selector.js","App.js","redux/user/user.action.js","index.js","page/ChartPage/chart_data.jsx"],"names":["module","exports","ClassActionTypes","TOGGLE_MENU_LEFT","INITIAL_STATE","menu_left","classReducer","state","action","type","dataSocketActionTypes","CONNECTION_SOCKET","INIT_CHART","SET_DATA_SYMBOL_CHART","SOCKET_STATE_READY","cleaningDataSymbol","data_socket","new_data_socket","reset_chart","JSON","parse","forEach","elementSymbol","symbol","Object","keys","elementInterval","interval","close","slice_data","formattedTime","element","get_formated_time","timestamp","console","log","cloneDeep","data","length","slice","time","date","Date","dayMonth","getDate","getMonth","hours","getHours","minutes","getMinutes","getSeconds","substr","debug","process","dataSocketConf","ENDPOINT","ROOM","REQUEST","INIT_SYMBOL","LIST_SYMBOL","LIST_INTERVAL","data_chart","is_socket_ready","obInterval","dataSocketReducer","response_socket","resetChart","UserActionTypes","SET_NEW_USER","user","userReducer","Math","random","toString","persistConfig","key","storage","whitelist","blacklist","rootReducer","combineReducers","class","dataSocket","persistReducer","selectUser","createSelector","stateUser","setDataSymbolChart","msg","setSocketReady","channelChart","connectionSocketSaga","initChartSaga","onChangeInitChart","onConnectionSocket","dataSocketSagas","socket","getSocket","socketIOClient","error","setTimeout","subscribeChannel","channel","eventChannel","emit","on","call","callChannelChart","take","channelChartPayload","put","select","fork","requestNewChart","data_to_emit","uid","arg","room","takeLatest","all","rootSaga","sagaMiddlewares","createSagaMiddleware","middlewares","store","createStore","applyMiddleware","run","persistor","persistStore","connect","dispatch","toggleMenuLeft","useState","isActive","setIsActive","useEffect","className","src","Logo","id","path","name","map","link","exact","to","activeClassName","onClick","CursorFollow","window","innerWidth","cursor","document","querySelector","addEventListener","e","setAttribute","y","x","classList","add","remove","DropDownChart","setParentData","list_data","dataParent","dropdownOpen","setDropdownOpen","dropdownData","setDropdownData","dropdownItemsData","_data","DropdownItem","tag","Dropdown","nav","isOpen","toggle","DropdownToggle","caret","DropdownMenu","right","selectDataSocket","selectChart","stateDataSocket","isSocketReady","mapStateToProps","createStructuredSelector","dataChart","initChart","size","symbolParent","intervalParent","type_chart","setSymbol","setInterval","dataFormattedTime","setDataFormattedTime","dataClose","setDataClose","symbols","intervals","options","ChartPage","dashboardPanelChart","dashboardShippedProductsChart","dashboardAllProductsChart","dashboard24HoursPerformanceChart","TradePage","selectClassMenuLeft","stateClass","classMenuLeft","setNewUser","connectionSocket","menuLeft","setMenuLeft","pageSmooth","setPageSmooth","AppID","getElementById","includes","component","Chartpage","ReactDOM","render","hexToRGB","hex","alpha","r","parseInt","g","b","labelChart","canvas","ctx","getContext","gradientStroke","createLinearGradient","addColorStop","gradientFill","labels","datasets","label","borderColor","pointBorderColor","pointBackgroundColor","pointHoverBackgroundColor","pointHoverBorderColor","pointBorderWidth","pointHoverRadius","pointHoverBorderWidth","pointRadius","fill","backgroundColor","borderWidth","layout","padding","left","top","bottom","maintainAspectRatio","tooltips","titleFontColor","bodyFontColor","bodySpacing","xPadding","mode","intersect","position","legend","fillStyle","display","scales","yAxes","ticks","fontColor","fontStyle","maxTicksLimit","gridLines","drawTicks","drawBorder","color","zeroLineColor","xAxes","yPadding","caretPadding","responsive","fontSize"],"mappings":"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","file":"static/js/main.27c7b9d0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.7c4a48b5.svg\";","const ClassActionTypes = {\r\n    TOGGLE_MENU_LEFT: \"TOGGLE_MENU_LEFT\"\r\n};\r\n\r\nexport default ClassActionTypes;","import ClassActionTypes from './class.type';\r\n\r\nconst INITIAL_STATE = {\r\n\tmenu_left: false\r\n}\r\n\r\nconst classReducer = (state = INITIAL_STATE, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase ClassActionTypes.TOGGLE_MENU_LEFT:\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tmenu_left: !state.menu_left,\r\n\t\t}\r\n\t\tdefault:\r\n\t\treturn state;\r\n\t}\r\n}\r\n\r\nexport default classReducer;","const dataSocketActionTypes = {\r\n    CONNECTION_SOCKET: \"CONNECTION_SOCKET\",\r\n    INIT_CHART: \"INIT_CHART\",\r\n    SET_DATA_SYMBOL_CHART: \"SET_DATA_SYMBOL_CHART\",\r\n    SOCKET_STATE_READY: \"SOCKET_STATE_READY\"\r\n};\r\n\r\nexport default dataSocketActionTypes;","import * as cloneDeep from 'lodash/cloneDeep';\r\n\r\nexport const cleaningDataSymbol = (data_socket, new_data_socket, reset_chart) => {\r\n    //console.debug(\"cleaning:Data\", data_socket);\r\n    //console.debug(\"cleaning:NewData\", new_data_socket);\r\n    \r\n    JSON.parse(new_data_socket).forEach(elementSymbol => {\r\n        //console.debug(\"cleaning:elementSymbol\", elementSymbol);\r\n        const symbol = Object.keys(elementSymbol);\r\n        \r\n        elementSymbol[symbol].forEach(elementInterval => {\r\n            const interval = Object.keys(elementInterval);\r\n            //console.debug(\"cleaning:elementInterval\", elementInterval);\r\n            // Delete the oldest value\r\n            data_socket[symbol][interval].close = slice_data(data_socket[symbol][interval].close);\r\n            data_socket[symbol][interval].formattedTime = slice_data(data_socket[symbol][interval].formattedTime);\r\n    \r\n            if(reset_chart){\r\n                data_socket[symbol][interval].close = [];\r\n                data_socket[symbol][interval].formattedTime = [];\r\n            }\r\n            elementInterval[interval].forEach(element => {\r\n                //console.log('cleaning:Element', reset_chart);\r\n                // Merge With old Data\r\n                data_socket[symbol][interval].close = [...data_socket[symbol][interval].close, element.close];\r\n                data_socket[symbol][interval].formattedTime = [...data_socket[symbol][interval].formattedTime, get_formated_time(element.timestamp)];\r\n                \r\n            });\r\n        });\r\n    });\r\n\r\n    console.log('cleaning:FinalElement', data_socket);\r\n    return cloneDeep(data_socket);\r\n}\r\n\r\nconst slice_data = (data) => {\r\n    if(data.length > 50)\r\n        data = data.slice(1);\r\n\r\n    return data;\r\n};\r\n\r\nconst get_formated_time = (time) => {\r\n    const date = new Date(time);\r\n    const dayMonth = date.getDate()+'-'+date.getMonth();\r\n    const hours = date.getHours();\r\n    const minutes = \"0\" + date.getMinutes();\r\n    const seconds = \"0\" + date.getSeconds();\r\n\r\n    return dayMonth+\" \"+hours + ':' + minutes.substr(-2);\r\n}","\r\nconsole.debug(process.env.REACT_APP_PORT_SERVER);\r\nconst dataSocketConf = {\r\n    ENDPOINT: \"localhost:\"+process.env.REACT_APP_PORT_SERVER+\"/\",\r\n    ROOM: \"BinanceIO\",\r\n    REQUEST: \"request\",\r\n    INIT_SYMBOL: \"BTCUSDT\",\r\n    LIST_SYMBOL: ['BTCUSDT', 'LINKUSDT', 'VETUSDT', 'ETHUSDT'],\r\n    LIST_INTERVAL: ['1m', '3m', '15m', '30m', '1h'],\r\n};\r\n//interval. Allowed value: [1m, 3m, 5m, 15m, 30m, 1h, 2h, 4h, 6h, 8h, 12h, 1d, 3d, 1w, 1M]\r\n\r\nexport default dataSocketConf;","import dataSocketActionTypes from './dataSocket.type';\r\nimport { cleaningDataSymbol } from './dataSocket.utils';\r\nimport dataSocketConf from './dataSocket.conf';\r\nimport * as cloneDeep from 'lodash/cloneDeep';\r\nconst INITIAL_STATE = {\r\n\tdata_chart:{},\r\n\tis_socket_ready: false\r\n}\r\n\r\nconst obInterval= {};\r\ndataSocketConf.LIST_INTERVAL.forEach(elementInterval => {\r\n\tobInterval[elementInterval] = {\r\n\t\tclose: [],\r\n\t\tformattedTime: []\r\n\t};\r\n});\r\ndataSocketConf.LIST_SYMBOL.forEach(elementSymbol => {\r\n\tINITIAL_STATE.data_chart[elementSymbol] = cloneDeep(obInterval);\r\n});\r\n\r\nconst dataSocketReducer = (state = INITIAL_STATE, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase dataSocketActionTypes.SET_DATA_SYMBOL_CHART:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdata_chart: cleaningDataSymbol(state.data_chart, action.response_socket, action.resetChart),\r\n\t\t\t}\r\n\t\tcase dataSocketActionTypes.SOCKET_STATE_READY:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tis_socket_ready: true,\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nexport default dataSocketReducer;","const UserActionTypes = {\r\n    SET_NEW_USER: \"SET_NEW_USER\"\r\n};\r\n\r\nexport default UserActionTypes;","import UserActionTypes from './user.type';\r\n\r\nconst INITIAL_STATE = {\r\n\tuser: null\r\n}\r\n\r\nconst userReducer = (state = INITIAL_STATE, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase UserActionTypes.SET_NEW_USER:\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tuser: (!state.user) ? Math.random().toString(36).slice(2) : state.user,\r\n\t\t}\r\n\t\tdefault:\r\n\t\treturn state;\r\n\t}\r\n}\r\n\r\nexport default userReducer;","import { combineReducers } from 'redux';\r\nimport { persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport classReducer from './class/class.reducer';\r\nimport dataSocketReducer from './dataSocket/dataSocket.reducer';\r\nimport userReducer from './user/user.reducer';\r\n\r\n\r\nconst persistConfig = {\r\n    key: 'root',\r\n    storage,\r\n    whitelist: ['user'],\r\n    blacklist: ['dataSocket']\r\n};\r\n\r\nconst rootReducer = combineReducers({\r\n    class: classReducer,\r\n    dataSocket: dataSocketReducer,\r\n    user: userReducer\r\n});\r\n\r\nexport default persistReducer(persistConfig, rootReducer);","import { createSelector } from 'reselect'\r\nconst selectorUser = state => state.user\r\n\r\nexport const selectUser = createSelector(\r\n    [selectorUser],\r\n    stateUser => stateUser.user\r\n);","import dataSocketActionTypes from './dataSocket.type';\r\n\r\nexport const connectionSocket = () => ({\r\n    type: dataSocketActionTypes.CONNECTION_SOCKET\r\n});\r\nexport const setDataSymbolChart = (data, resetChart) => ({\r\n    type: dataSocketActionTypes.SET_DATA_SYMBOL_CHART,\r\n    response_socket: data.msg,\r\n    resetChart: resetChart\r\n});\r\nexport const initChart = (symbol, interval) => ({\r\n    type: dataSocketActionTypes.INIT_CHART,\r\n    symbol: symbol,\r\n    interval: interval\r\n});\r\nexport const setSocketReady = () => ({\r\n    type: dataSocketActionTypes.SOCKET_STATE_READY,\r\n});","import {select, all, call, takeLatest, put, take, fork, cancel} from 'redux-saga/effects';\r\nimport {eventChannel, delay} from 'redux-saga';\r\n\r\nimport { selectUser } from '../user/user.selector';\r\n\r\nimport dataSocketActionTypes from './dataSocket.type';\r\nimport { \r\n    setDataSymbolChart, \r\n    setSocketReady} \r\n    from './dataSocket.action';\r\nimport dataSocketConf from './dataSocket.conf';\r\nimport socketIOClient from \"socket.io-client\";\r\n\r\nlet channelChartIO = null;\r\nlet socket = null;\r\nconst getSocket = () => {\r\n    try{\r\n        if(!socket)\r\n            socket = socketIOClient(dataSocketConf.ENDPOINT);\r\n    }catch(error){\r\n        console.error(\"Socket Connection Error: Retry 10 secondes\", error);\r\n        setTimeout(() => { getSocket() }, 10000);\r\n    }\r\n    return socket;\r\n};\r\n\r\nconst subscribeChannel = ({channel}) => eventChannel((emit) => {\r\n    console.debug('subscribeChannel',{channel});\r\n    const handler = (data) => { emit(data); };\r\n    getSocket().on(channel, handler);\r\n    return () => {\r\n      //socket.off(channel, handler);\r\n    };\r\n});\r\n\r\nfunction* channelChart(channel, resetChart) {\r\n    const callChannelChart = yield call(subscribeChannel, {\r\n        socket: getSocket(), \r\n        channel: channel\r\n    });\r\n    while (true) {\r\n        const channelChartPayload = yield take(callChannelChart);\r\n        yield put(setDataSymbolChart(channelChartPayload, resetChart));\r\n    }\r\n}\r\n\r\nexport function* connectionSocketSaga(){\r\n    yield console.log(\"connectionSocket\");\r\n    yield put(setSocketReady());\r\n    \r\n    const user = yield select(selectUser);\r\n    let reset_chart;\r\n    yield fork(channelChart, user, reset_chart = true);\r\n    yield fork(channelChart, dataSocketConf.ROOM, reset_chart = false);\r\n}\r\n\r\nconst requestNewChart = (user, symbol, interval) => {\r\n    const data_to_emit = {\r\n        uid: user,\r\n        arg: {\r\n            symbol: symbol,\r\n            interval: interval,\r\n            type: \"CANDLESTICK\"\r\n        }\r\n    };\r\n    getSocket().emit(dataSocketConf.REQUEST, data_to_emit);\r\n};\r\n\r\nexport function* initChartSaga({symbol, interval}){\r\n    yield console.log(\"initChartSaga\");\r\n    const user = yield select(selectUser);\r\n    \r\n    // New Chart\r\n    let room = user;\r\n    requestNewChart(user, symbol, interval);\r\n\r\n    // Listener on new currency\r\n    room = symbol+'-'+interval\r\n    socket.emit('subscribe', room);\r\n}\r\n\r\nexport function* onChangeInitChart(){\r\n    yield takeLatest(dataSocketActionTypes.INIT_CHART, initChartSaga);\r\n}\r\nexport function* onConnectionSocket(){\r\n    yield takeLatest(dataSocketActionTypes.CONNECTION_SOCKET, connectionSocketSaga);\r\n}\r\n\r\nexport function* dataSocketSagas(){\r\n    yield all([call(onConnectionSocket), call(onChangeInitChart)]);\r\n}","import {all, call} from 'redux-saga/effects';\r\nimport {dataSocketSagas} from './dataSocket/dataSocket.sagas';\r\n\r\nexport default function* rootSaga(){\r\n    yield all([\r\n        call(dataSocketSagas), \r\n    ]);\r\n}","import { createStore, applyMiddleware } from 'redux';\r\nimport { persistStore } from 'redux-persist';\r\nimport logger from 'redux-logger';\r\nimport createSagaMiddleware from 'redux-saga';\r\n\r\nimport rootReducer from './root-reducer';\r\nimport rootSaga from './root-saga';\r\n\r\nconst sagaMiddlewares = createSagaMiddleware();\r\n\r\nconst middlewares = [sagaMiddlewares];\r\n\r\nif(process.env.NODE_ENV === \"development\"){\r\n    middlewares.push(logger);\r\n}\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\r\n\r\nsagaMiddlewares.run(rootSaga);\r\n\r\nexport const persistor = persistStore(store);\r\nexport default { store, persistor };","import React, {useEffect, useState} from 'react';\r\nimport './MenuLeft.scss';\r\nimport Logo from './logo.svg';\r\nimport { NavLink } from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {toggleMenuLeft} from '../../redux/class/class.action';\r\n\r\nconst MenuLeft = ({toggleMenuLeft}) => {\r\n  const links = [\r\n    {id: 1, path: '/', name: 'Dashboard', class: 'fas fa-chart-line'},\r\n    {id: 2, path: '/trade', name: 'Trade', class: 'far fa-edit'},\r\n  ];\r\n  const [isActive, setIsActive] = useState(true);\r\n\r\n  useEffect(() => {\r\n    setTimeout(()=>(toggleMenuLeft()), 700);\r\n  },[]);\r\n  \r\n  return(\r\n    <div className='menu-left-container'>\r\n      <div className=\"menu-left-header\">\r\n        <img src={Logo}/>\r\n        <span className=\"title\">inance Bot</span>\r\n      </div>\r\n      <div className=\"nav-block\">\r\n      {\r\n        links.map((link)=>(\r\n          <NavLink \r\n            exact\r\n            key={link.id} \r\n            to={link.path} \r\n            className='menu-left-link'\r\n            activeClassName=\"selected-link\">\r\n            <i className={`${link.class} menu-icon`}></i>\r\n            {link.name}\r\n          </NavLink>\r\n          ))\r\n      }\r\n      </div>\r\n      <div className=\"hide-show-menu\" onClick={()=>{setIsActive(!isActive);toggleMenuLeft()}}>\r\n        <div className={\"hamburger hamburger--spring js-hamburger \" + ((isActive) ? \"is-active\": \"\")}>\r\n          <div className=\"hamburger-box\">\r\n            <div className=\"hamburger-inner\"></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n    \r\nconst mapDispatchToProps = dispatch => ({\r\n  toggleMenuLeft: () => dispatch(toggleMenuLeft())\r\n});\r\nexport default connect(null, mapDispatchToProps)(MenuLeft);","import ClassActionTypes from './class.type';\r\n\r\nexport const toggleMenuLeft = () => ({\r\n    type: ClassActionTypes.TOGGLE_MENU_LEFT\r\n});","import React, {useEffect} from 'react';\r\nimport './CursorFollow.style.scss';\r\n\r\nconst CursorFollow = () => {\r\n\r\n    useEffect(() => {\r\n        if(window.innerWidth > 880){\r\n            const cursor = document.querySelector('.cursor');\r\n\r\n            document.addEventListener('mousemove', e => {\r\n                cursor.setAttribute(\"style\", \"--y: \"+(e.y)+\"px; --x: \"+(e.x)+\"px;\")\r\n            });\r\n            document.addEventListener('click', () => {\r\n                cursor.classList.add(\"expand\");\r\n                setTimeout(() => {\r\n                    cursor.classList.remove(\"expand\");\r\n                }, 1000)\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"cursor\"/>\r\n    );\r\n};\r\n\r\nexport default CursorFollow;","import React, {useState, useEffect} from 'react';\r\nimport './DropDownChart.style.scss';\r\nimport {\r\n    Dropdown,\r\n    DropdownToggle,\r\n    DropdownMenu,\r\n    DropdownItem,\r\n} from \"reactstrap\";\r\n\r\n\r\nconst DropDownChart = ({setParentData, list_data, dataParent}) => {\r\n    const [dropdownOpen, setDropdownOpen] = useState(false);\r\n    const [dropdownData, setDropdownData] = useState(dataParent);\r\n    \r\n    const dropdownItemsData = list_data.map((_data) =>\r\n        <DropdownItem \r\n            tag=\"a\" \r\n            key={_data}\r\n            className={(dropdownData === _data ? \"current\" : \"\")}\r\n            onClick={() => {\r\n                setParentData(_data);\r\n                setDropdownData(_data);\r\n            }}\r\n        >\r\n            {_data}\r\n        </DropdownItem>\r\n    );\r\n\r\n    return (\r\n        <Dropdown  \r\n            nav\r\n            isOpen={dropdownOpen}\r\n            toggle={() => setDropdownOpen(!dropdownOpen)}\r\n        >\r\n            <DropdownToggle caret nav className=\"block-change-data\">\r\n                <i className=\"fas fa-chart-bar chart-icon\"></i>{dropdownData}\r\n            </DropdownToggle>\r\n            <DropdownMenu right>{dropdownItemsData}</DropdownMenu>\r\n        </Dropdown>\r\n    );\r\n};\r\n\r\nexport default DropDownChart;","import { createSelector } from 'reselect'\r\nconst selectDataSocket = state => state.dataSocket\r\n\r\nexport const selectChart = createSelector(\r\n    [selectDataSocket],\r\n    stateDataSocket => stateDataSocket.data_chart\r\n);\r\n\r\nexport const isSocketReady = createSelector(\r\n    [selectDataSocket],\r\n    stateDataSocket => stateDataSocket.is_socket_ready\r\n);\r\n\r\n","import React, {useEffect, useState} from \"react\";\nimport DropDownChart from '../DropDownChart/DropDownChart.component';\nimport \"./ContainerChart.style.scss\";\nimport { Line, Bar } from \"react-chartjs-2\";\n\n// Redux\nimport {connect} from 'react-redux';\nimport {selectChart, isSocketReady} from '../../redux/dataSocket/dataSocket.selector';\nimport {initChart} from '../../redux/dataSocket/dataSocket.action';\nimport dataSocketConf from '../../redux/dataSocket/dataSocket.conf';\nimport { createStructuredSelector } from 'reselect';\n\nconst ContainerChart = ({size, symbolParent, intervalParent, dataChart, type_chart, initChart, isSocketReady}) => {\n  const [symbol, setSymbol] = useState(symbolParent);\n  const [interval, setInterval] = useState(intervalParent);\n  \n  const [dataFormattedTime, setDataFormattedTime] = useState([]);\n  const [dataClose, setDataClose] = useState([]);\n  \n  const symbols = dataSocketConf.LIST_SYMBOL;\n  const intervals = dataSocketConf.LIST_INTERVAL;\n\n  useEffect(() => {\n    if(isSocketReady)\n      initChart(symbol, interval);\n    \n  },[symbol, interval, isSocketReady]);\n\n  useEffect(() => {\n    try { \n      if(dataChart[symbol][interval]){\n        setDataFormattedTime(dataChart[symbol][interval].formattedTime);\n        setDataClose(dataChart[symbol][interval].close);\n      }  \n    } \n    catch(e) { \n      console.log(\"catchdataChart\");\n    }\n  },[dataChart]);\n\n  return (\n    <div className={\"container-chart \" + (size ? size : \"\")}>\n      <div className=\"container-dropdownchart\">\n        <DropDownChart setParentData={setSymbol} list_data={symbols} dataParent={symbolParent}/>\n        <DropDownChart setParentData={setInterval} list_data={intervals} dataParent={intervalParent} />\n      </div>\n      <h3>{symbol} {interval}</h3>\n      <Line\n        data={type_chart.data(dataFormattedTime, dataClose)}\n        options={type_chart.options} />\n    </div>\n  );\n}\n\nconst mapStateToProps = createStructuredSelector({\n  dataChart: selectChart,\n  isSocketReady: isSocketReady,\n});\nconst mapDispatchToProps = dispatch => ({\n  initChart: (symbol, interval) => dispatch(initChart(symbol, interval))\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(ContainerChart);","import React from 'react';\r\nimport './ChartPage.style.scss';\r\n\r\n// Chart\r\nimport ContainerChart from \"../../components/ContainerChart/ContainerChart.component\";\r\nimport {\r\n\tdashboardPanelChart,\r\n\tdashboardShippedProductsChart,\r\n\tdashboardAllProductsChart,\r\n\tdashboard24HoursPerformanceChart\r\n} from \"./chart_data\"; \r\n\r\nconst ChartPage = () => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<ContainerChart size=\"lg\" symbolParent=\"BTCUSDT\" intervalParent=\"1m\" type_chart={dashboardPanelChart}/>\r\n\t\t\t<div className=\"container-charts\">\r\n\t\t\t\t<ContainerChart size=\"sm\" symbolParent=\"BTCUSDT\" intervalParent=\"15m\" type_chart={dashboardShippedProductsChart}/>\r\n\t\t\t\t<ContainerChart size=\"sm\" symbolParent=\"BTCUSDT\" intervalParent=\"30m\" type_chart={dashboardAllProductsChart}/>\r\n\t\t\t\t<ContainerChart size=\"sm\" symbolParent=\"BTCUSDT\" intervalParent=\"1h\" type_chart={dashboard24HoursPerformanceChart}/>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n}\r\n\t\r\nexport default ChartPage;","import React from 'react';\r\n\r\nconst TradePage = () => (\r\n    <div>\r\n\r\n    </div>\r\n);\r\n\r\nexport default TradePage;","import { createSelector } from 'reselect'\r\nconst selectClass = state => state.class\r\n\r\nexport const selectClassMenuLeft = createSelector(\r\n    [selectClass],\r\n    stateClass => stateClass.menu_left\r\n);","import React, {useEffect, useState} from 'react';\n//import ReactDOM from 'react-dom'\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport MenuLeft from './components/MenuLeft/MenuLeft.component';\nimport CursorFollow from './components/CursorFollow/CursorFollow.component';\nimport Chartpage from './page/ChartPage/ChartPage.component';\nimport TradePage from './page/TradePage/TradePage.component';\nimport './App.scss';\n\n// REDUX\nimport {connect} from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { selectClassMenuLeft } from './redux/class/class.selector';\nimport { setNewUser } from './redux/user/user.action';\nimport { connectionSocket } from './redux/dataSocket/dataSocket.action';\n\n\nconst App = ({classMenuLeft, setNewUser, connectionSocket}) => {\n  const [menuLeft, setMenuLeft] = useState('fullscreen');\n  const [pageSmooth, setPageSmooth] = useState('');\n\n  /**\n   *  When Mounted\n   */\n  useEffect(() => {\n    setNewUser();\n    connectionSocket();\n    \n    /*\n    *  The css property calc() slow down the animation\n    *  So we listen when the animation is done to add calc on it\n    */\n    const el = document.querySelector('.pages');\n    el.addEventListener('transitionend', () => {\n      let AppID = document.getElementById('App');\n      setPageSmooth(AppID.className.includes(\"fullscreen\") ? '' : 'smooth');\n    });\n  }, [setNewUser, connectionSocket]);\n\n  /**\n   *  Add class to hide the menu\n   */\n  useEffect(() => {\n    setMenuLeft(classMenuLeft ? '' : 'fullscreen');\n    setPageSmooth('');\n  },[classMenuLeft]);\n\n  return(\n    <div id=\"App\" className={`${menuLeft} App`}>\n      <MenuLeft />\n      <div className={`${pageSmooth} pages`}>\n        <Switch>\n          <Route path='trade' component={TradePage}/>\n          <Route path='' component={Chartpage}/>\n        </Switch>\n      </div>\n      <CursorFollow/>\n    </div>\n  );\n}\n\nconst mapStateToProps = createStructuredSelector({\n  classMenuLeft: selectClassMenuLeft,\n});\nconst mapDispatchToProps = dispatch => ({\n  setNewUser: () => dispatch(setNewUser()),\n  connectionSocket: () => dispatch(connectionSocket())\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import UserActionTypes from './user.type';\r\n\r\nexport const setNewUser = () => ({\r\n    type: UserActionTypes.SET_NEW_USER\r\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\n// Redux\nimport { Provider } from 'react-redux'\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store , persistor }  from './redux/store';\n\nimport './index.scss';\nimport App from './App';\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter>\n            <PersistGate persistor={persistor}>\n                <App />\n            </PersistGate>\n        </BrowserRouter>\n    </Provider>, \n    document.getElementById('root')\n);","// ##############################\n// // // Function that converts a hex color number to a RGB color number\n// #############################\nfunction hexToRGB(hex, alpha) {\n  var r = parseInt(hex.slice(1, 3), 16),\n    g = parseInt(hex.slice(3, 5), 16),\n    b = parseInt(hex.slice(5, 7), 16);\n\n  if (alpha) {\n    return \"rgba(\" + r + \", \" + g + \", \" + b + \", \" + alpha + \")\";\n  } else {\n    return \"rgb(\" + r + \", \" + g + \", \" + b + \")\";\n  }\n}\n\n// ##############################\n// // // general variables for charts\n// #############################\n\nconst chartColor = \"#FFFFFF\";\n\n// General configuration for the charts with Line gradientStroke\nconst gradientChartOptionsConfiguration = {\n  maintainAspectRatio: false,\n  legend: {\n    display: false\n  },\n  tooltips: {\n    bodySpacing: 4,\n    mode: \"nearest\",\n    intersect: 0,\n    position: \"nearest\",\n    xPadding: 10,\n    yPadding: 10,\n    caretPadding: 10\n  },\n  responsive: 1,\n  scales: {\n    yAxes: [\n      {\n        gridLines: {\n          zeroLineColor: \"transparent\",\n          drawBorder: false\n        },\n        ticks: {\n          maxTicksLimit: 7,\n        }\n      }\n    ],\n    xAxes: [\n      {\n        ticks: {\n          display: true,\n          maxTicksLimit: 8,\n          fontSize: 10,\n        },\n        gridLines: {\n          drawTicks: false,\n          drawBorder: false,\n          display: false,\n          color: \"rgba(111,111,111,0.1)\",\n          zeroLineColor: \"transparent\"\n        }\n      }\n    ]\n  },\n  layout: {\n    padding: { left: 0, right: 0, top: 15, bottom: 15 }\n  }\n};\n\nvar gradientChartOptionsConfigurationWithNumbersAndGrid = {\n  maintainAspectRatio: false,\n  legend: {\n    display: false\n  },\n  tooltips: {\n    bodySpacing: 4,\n    mode: \"nearest\",\n    intersect: 0,\n    position: \"nearest\",\n    xPadding: 10,\n    yPadding: 10,\n    caretPadding: 10\n  },\n  responsive: 1,\n  scales: {\n    yAxes: [\n      {\n        gridLines: {\n          zeroLineColor: \"transparent\",\n          drawBorder: false\n        },\n        ticks: {\n          maxTicksLimit: 7\n        }\n      }\n    ],\n    xAxes: [\n      {\n        ticks: {\n          display: true,\n          maxTicksLimit: 8,\n          fontSize: 10,\n        },\n        gridLines: {\n          zeroLineColor: \"transparent\",\n          drawTicks: false,\n          display: false,\n          drawBorder: false\n        }\n      }\n    ] \n  },\n  layout: {\n    padding: { left: 0, right: 0, top: 15, bottom: 15 }\n  }\n};\n\n// ##############################\n// // // Dashboard view - Panel chart\n// #############################\nconst dashboardPanelChart = {\n  data: (labelChart, dataChart) => canvas => {\n    const ctx = canvas.getContext(\"2d\");\n    var chartColor = \"#FFFFFF\";\n    var gradientStroke = ctx.createLinearGradient(500, 0, 100, 0);\n    gradientStroke.addColorStop(0, \"#80b6f4\");\n    gradientStroke.addColorStop(1, chartColor);\n    var gradientFill = ctx.createLinearGradient(0, 200, 0, 50);\n    gradientFill.addColorStop(0, \"rgba(128, 182, 244, 0)\");\n    gradientFill.addColorStop(1, \"rgba(255, 255, 255, 0.14)\");\n\n    return {\n      labels: labelChart,\n      datasets: [\n        {\n          label: \"Data\",\n          borderColor: chartColor,\n          pointBorderColor: chartColor,\n          pointBackgroundColor: \"#2c2c2c\",\n          pointHoverBackgroundColor: \"#2c2c2c\",\n          pointHoverBorderColor: chartColor,\n          pointBorderWidth: 1,\n          pointHoverRadius: 7,\n          pointHoverBorderWidth: 2,\n          pointRadius: 5,\n          fill: true,\n          backgroundColor: gradientFill,\n          borderWidth: 2,\n          data: dataChart\n        }\n      ]\n    };\n  },\n  options: {\n    layout: {\n      padding: {\n        left: 20,\n        right: 20,\n        top: 0,\n        bottom: 0\n      }\n    },\n    maintainAspectRatio: false,\n    tooltips: {\n      backgroundColor: \"#fff\",\n      titleFontColor: \"#333\",\n      bodyFontColor: \"#666\",\n      bodySpacing: 4,\n      xPadding: 12,\n      mode: \"nearest\",\n      intersect: 0,\n      position: \"nearest\"\n    },\n    legend: {\n      position: \"bottom\",\n      fillStyle: \"#FFF\",\n      display: false\n    },\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            fontColor: \"rgba(255,255,255,0.4)\",\n            fontStyle: \"bold\",\n            /*beginAtZero: true,*/\n            maxTicksLimit: 5,\n            padding: 10\n          },\n          gridLines: {\n            drawTicks: true,\n            drawBorder: false,\n            display: true,\n            color: \"rgba(255,255,255,0.1)\",\n            zeroLineColor: \"transparent\"\n          }\n        }\n      ],\n      xAxes: [\n        {\n          gridLines: {\n            display: false,\n            color: \"rgba(255,255,255,0.1)\"\n          },\n          ticks: {\n            padding: 10,\n            fontColor: \"rgba(255,255,255,0.4)\",\n            maxTicksLimit: window.innerWidth < 500 ? 7 : 21,\n          }\n        }\n      ]\n    }\n  }\n};\n\n// ##############################\n// // // Dashboard view - Shipped Products - Card\n// #############################\n\nconst dashboardShippedProductsChart = {\n  data: (labelChart, dataChart) => canvas => {\n    var ctx = canvas.getContext(\"2d\");\n    var gradientStroke = ctx.createLinearGradient(500, 0, 100, 0);\n    gradientStroke.addColorStop(0, \"#80b6f4\");\n    gradientStroke.addColorStop(1, chartColor);\n    var gradientFill = ctx.createLinearGradient(0, 170, 0, 50);\n    gradientFill.addColorStop(0, \"rgba(128, 182, 244, 0)\");\n    gradientFill.addColorStop(1, \"rgba(249, 99, 59, 0.40)\");\n    return {\n      labels: labelChart,\n      datasets: [\n        {\n          label: \"Chart 10mn\",\n          borderColor: \"#f96332\",\n          pointBorderColor: \"#FFF\",\n          color: \"#000\",\n          pointBackgroundColor: \"#f96332\",\n          pointBorderWidth: 2,\n          pointHoverRadius: 4,\n          pointHoverBorderWidth: 1,\n          pointRadius: 4,\n          fill: true,\n          backgroundColor: gradientFill,\n          borderWidth: 2,\n          data: dataChart\n        }\n      ]\n    };\n  },\n  options: gradientChartOptionsConfiguration\n};\n\n// ##############################\n// // // Dashboard view - All Products - Card\n// #############################\n\nconst dashboardAllProductsChart = {\n  data: (labelChart, dataChart) => canvas => {\n    var ctx = canvas.getContext(\"2d\");\n    var gradientStroke = ctx.createLinearGradient(500, 0, 100, 0);\n    gradientStroke.addColorStop(0, \"#18ce0f\");\n    gradientStroke.addColorStop(1, chartColor);\n    var gradientFill = ctx.createLinearGradient(0, 170, 0, 50);\n    gradientFill.addColorStop(0, \"rgba(128, 182, 244, 0)\");\n    gradientFill.addColorStop(1, hexToRGB(\"#18ce0f\", 0.4));\n    return {\n      labels: labelChart,\n      datasets: [\n        {\n          label: \"Chart 30mn\",\n          borderColor: \"#18ce0f\",\n          pointBorderColor: \"#FFF\",\n          pointBackgroundColor: \"#18ce0f\",\n          pointBorderWidth: 2,\n          pointHoverRadius: 4,\n          pointHoverBorderWidth: 1,\n          pointRadius: 4,\n          fill: true,\n          backgroundColor: gradientFill,\n          borderWidth: 2,\n          data: dataChart\n        }\n      ]\n    };\n  },\n  options: gradientChartOptionsConfigurationWithNumbersAndGrid\n};\n\n// ##############################\n// // // Dashboard view - Bar Chart - Card\n// #############################\n\nconst dashboard24HoursPerformanceChart = {\n  data: (labelChart, dataChart) => canvas => {\n    var ctx = canvas.getContext(\"2d\");\n    var gradientFill = ctx.createLinearGradient(0, 170, 0, 50);\n    gradientFill.addColorStop(0, \"rgba(128, 182, 244, 0)\");\n    gradientFill.addColorStop(1, hexToRGB(\"#2CA8FF\", 0.6));\n    return {\n      labels: labelChart,\n      datasets: [\n        {\n          label: \"Chart 1h\",\n          backgroundColor: gradientFill,\n          borderColor: \"#2CA8FF\",\n          pointBorderColor: \"#FFF\",\n          pointBackgroundColor: \"#2CA8FF\",\n          pointBorderWidth: 2,\n          pointHoverRadius: 4,\n          pointHoverBorderWidth: 1,\n          pointRadius: 4,\n          fill: true,\n          borderWidth: 1,\n          data: dataChart\n        }\n      ]\n    };\n  },\n  options: {\n    maintainAspectRatio: false,\n    legend: {\n      display: false\n    },\n    tooltips: {\n      bodySpacing: 4,\n      mode: \"nearest\",\n      intersect: 0,\n      position: \"nearest\",\n      xPadding: 10,\n      yPadding: 10,\n      caretPadding: 10\n    },\n    responsive: 1,\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            maxTicksLimit: 7\n          },\n          gridLines: {\n            zeroLineColor: \"transparent\",\n            drawBorder: false\n          }\n        }\n      ],\n      xAxes: [\n        {\n          ticks: {\n            display: true,\n            maxTicksLimit: 8,\n            fontSize: 10,\n          },\n          gridLines: {\n            zeroLineColor: \"transparent\",\n            drawTicks: false,\n            display: false,\n            drawBorder: false\n          }\n        }\n      ]\n    },\n    layout: {\n      padding: { left: 0, right: 0, top: 15, bottom: 15 }\n    }\n  }\n};\n\nmodule.exports = {\n  dashboardPanelChart, // Chart for Dashboard view - Will be rendered in panel\n  dashboardShippedProductsChart, // Chart for Dashboard view - Shipped Products Card\n  dashboardAllProductsChart, // Chart for Dashboard view - All products Card\n  dashboard24HoursPerformanceChart // Chart for Dashboard view - 24 Hours Performance Card\n};\n"],"sourceRoot":""}